{"version":3,"sources":["logo.svg","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","interval","portfolio","localStorage","getItem","config","name","JSON","parse","bought_at","qty","state","status","editMode","alert","alerting","say","bind","speak","save","toggleAlert","msg","this","speech","SpeechSynthesisUtterance","lang","volume","rate","pitch","text","window","speechSynthesis","setState","saving","setItem","stringify","sp_perc","playAudio","sp","tp","buy","className","style","flex","display","flexDirection","justifyContent","marginBottom","class","onClick","padding","last","high","low","Form","Group","controlId","Label","Control","type","defaultValue","value","onChange","ev","target","time","Date","Button","removeItem","onDelete","alignItems","fontSize","toFixed","Component","App","togglePlay","audio","play","loaded","primary","favourites","btc","eth","socketConn","processMessage","processTicker","init","cryptos","Audio","addEventListener","console","log","WebSocket","onopen","send","onerror","onmessage","msgData","data","stream","Object","entries","length","quote_unit","base_unit","change","current_price","start_price","removeEventListener","close","symbol","confirm","fav","color","InputGroup","FormControl","placeholder","fav_search","variant","id","addFav","flexGrow","map","item","keys","includes","delFav","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8d337f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React, Component, Fragment } from \"react\";\nimport { Form,Button } from \"react-bootstrap\";\nimport './card.css';\n\nexport class Card extends Component {\n    constructor(props) {\n      super(props)\n      this.interval = null;\n      let dynState = {};\n      let portfolio = localStorage.getItem(this.props.config.name) || null;\n      if(portfolio){\n          portfolio = JSON.parse(portfolio);\n          this.bought_at = portfolio.bought_at;\n          this.qty = portfolio.qty;\n      }\n      this.state = {\n         status:'active',\n         config:this.props.config || {},\n         editMode:false,\n         alert:false,\n         alerting:false,\n         ...portfolio\n      }\n      this.say = this.say.bind(this);\n      this.speak = this.speak.bind(this)\n      this.save = this.save.bind(this)\n      this.toggleAlert = this.toggleAlert.bind(this)\n    }\n  \n    componentDidMount(){ \n    }\n  \n    say(msg){ \n  \n      this.speak(msg);\n      \n    }\n  \n    speak(msg){\n        let speech = new SpeechSynthesisUtterance();\n        speech.lang = \"en-US\";\n        speech.volume = 1;\n        speech.rate =0.9;\n        speech.pitch = 1; \n        speech.text =  msg;\n        window.speechSynthesis.speak(speech);   \n    }\n  \n    save(){\n      this.setState({\n        saving:true\n      },()=>{\n        this.setState({\n          saving:null, \n          editMode:false,\n            bought_at:this.bought_at,\n            qty:this.qty , \n        },()=>{\n            localStorage.setItem(this.props.config.name,JSON.stringify({\n                bought_at:this.state.bought_at,\n                qty:this.state.qty,\n                alert:this.state.alert,\n            }))\n        })\n      })\n    }\n\n    componentDidUpdate(){\n        if(this.state.alert && this.sp_perc && this.sp_perc>1){\n            this.props.playAudio();\n        }\n    }\n    \n\n    toggleAlert(){\n        this.setState({\n            alert:!this.state.alert\n        })\n    }\n\n   \n    render() {\n        let sp = 0.00;\n        let sp_perc = 0.00;\n        let tp = 0.00;\n        if(this.state.bought_at){\n          sp = (this.props.config.buy)-(this.state.bought_at);\n          sp_perc = (sp*100/(this.state.bought_at))\n        }\n        if(this.state.qty){\n          tp = this.state.qty*sp;\n        }\n\n        this.sp_perc = sp_perc;\n        this.sp = sp;\n        this.tp = tp;\n      return (\n        <div className=\"service-monitor-card \">\n          <div style={{flex:2,display:'flex',flexDirection:'column',justifyContent:'spaceAround',marginBottom:'10px'}}>\n              <div className=\"row-ends\">\n                  <h3>{this.state.config.name}/INR</h3>\n                  {this.state.alert? <i class=\"fas fa-bell \" onClick={this.toggleAlert}></i>:<i class=\"far fa-bell\" onClick={this.toggleAlert}></i>}\n              </div>\n            \n            <p>\n              Current : ₹{this.props.config.buy} <span style={{padding:'5px'}}  >\n                 { ((this.props.config.buy-this.props.config.last)>=0)? <i class=\"fas fa-caret-up\"></i>:<i class=\"fas fa-caret-down\"></i>}\n                  </span>  <br/>\n              Last : ₹{this.props.config.last} <br/>\n              High : ₹{this.props.config.high} | Low : ₹{this.props.config.low} <br/>\n\n            </p>\n            <div className=\"portfolio-item-editor\">\n            {(()=>{\n                if(this.state.editMode){\n                    return  <Form> \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>  Bought At : </Form.Label>\n                    <Form.Control  type=\"number\"  defaultValue={this.state.bought_at||null}  value={this.bought_at||null} \n                      onChange={(ev)=>{\n                        this.bought_at=ev.target.value;\n                        this.setState({time:new Date()})\n                      }}/> \n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>  Qty : </Form.Label>\n                    <Form.Control  type=\"number\" defaultValue={this.state.qty||null}  value={this.qty} \n                       onChange={(ev)=>{\n                        this.qty=ev.target.value;\n                        this.setState({time:new Date()})\n                      }}/> \n                    </Form.Group>\n                    <Button onClick={this.save}>\n                    {this.state.saving? 'Saving':'Save'}\n                    </Button> &nbsp;\n                    <Button onClick={()=>{\n                        this.bought_at = null;\n                        this.qty = null;\n                        this.setState({bought_at:null,qty:null,time:new Date(),editMode:false});\n                        localStorage.removeItem(this.props.config.name)\n                    }}>\n                    Clear\n                    </Button> \n                    \n                    </Form>\n                } else {\n                    return   <div className=\"row-space-around\">\n                        <i class=\"fas fa-edit\"onClick={()=>{\n                        this.setState({editMode:true})\n                    }}></i>  \n                       <i class=\"fas fa-trash\" onClick={this.props.onDelete}></i> \n                    </div>\n                }\n            })()}\n              \n  \n            </div>\n          </div>\n          <div style={{flex:1,display:'flex',flexDirection:'column',justifyContent:'spaceAround'}}> \n            {(()=>{\n         \n             \n              if(sp){\n                return <div class=\"dchange\" data-change={sp} style={{flex:1,alignItems:\"flex-end\",fontSize:'150%'}}> \n                  {sp?  <div data-change={sp} style={{flex:1,alignItems:\"flex-end\"}}>\n                  {tp>=0? \"Profit\":\"Loss\"}: ₹  {tp.toFixed(3)}  {\"   \"}<br/>\n                  ({sp_perc.toFixed(2)}%)\n                </div>:null}\n                </div>\n              } \n  \n            })()}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export class LiveIcon extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        status:  {\n          name: \"Listening\",\n          class: \"listen\",\n        }\n      };\n    }\n  \n    static getDerivedStateFromProps(props){\n      let status = {\n        name: \"Active\",\n        class: \"active\",\n      };\n      switch (props.status) {\n        case \"active\":\n          status = {\n            name: \"Active\",\n            class: \"active\",\n          };\n          break;\n        case \"listen\":\n          status = {\n            name: \"Listening\",\n            class: \"listen\",\n          };\n          break;\n        case \"inactive\":\n          status = {\n            name: \"Down\",\n            class: \"\",\n          };\n          break;\n      }\n      return {status:status};\n    }\n  \n   \n  \n    render() {\n      return (\n        <div className=\"icon\">\n        <div className={\"video__icon \" + this.state.status.class}>\n          <div className=\"circle--outer\"></div>\n          <div className=\"circle--inner\"></div>\n          <p>{this.state.status.name}</p>\n        </div></div> \n      );\n    }\n  }","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { React, Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Card} from \"./components/Card\"\n\nimport { FormControl,InputGroup,Button } from \"react-bootstrap\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props) \n    let portfolio = localStorage.getItem('favourites') || null;\n    if(portfolio){\n        portfolio = JSON.parse(portfolio);\n    }\n    this.state = {\n      loaded:false,   play: false,\n      primary:\"inr\",\n      favourites:  portfolio || {btc:{},eth:{}}\n    }\n    this.socketConn =  null;\n    this.processMessage = this.processMessage.bind(this)\n    this.processTicker = this.processTicker.bind(this)\n    this.init = this.init.bind(this)\n    this.cryptos = [] \n    this.audio = new Audio(\"/Bell Ringing v2.wav\")\n }\n\n\n  componentDidMount(){  \n    this.audio.addEventListener('ended', () => this.setState({ play: false }));\n    this.init()\n  }\n\n  init(){\n    console.log('Connecting again')\n     this.socketConn = new WebSocket(\"wss://stream-internal.wazirx.com/stream\"); \n    this.socketConn.onopen= (ev)=>{\n      this.socketConn.send(JSON.stringify({\"event\":\"subscribe\",\"streams\":[\"!ticker@arr\"]}))\n      this.socketConn.send(JSON.stringify({\"event\":\"subscribe\",\"streams\":[\"crypto@rates\"]}))\n    } \n    \n    this.socketConn.onerror= (ev)=>{\n      console.log('error');\n      this.init();\n    } \n    this.socketConn.onmessage = this.processMessage\n  }\n\n  processMessage(ev){ \n    let msgData = JSON.parse(ev.data);\n    \n    if(msgData){\n      if(msgData && msgData.status=='error'){\n        this.init(); \n        return;\n      }\n      switch(msgData.stream){\n        case '!ticker@arr':\n          this.processTicker(msgData.data)\n          break;\n      }\n    }\n  }\n\n  processTicker(data){ \n    let oldCount =  Object.entries(this.cryptos).length;\n    for (const [key, value] of Object.entries(data)) { \n      if(value.quote_unit==this.state.primary){\n         if(!(value.base_unit in this.cryptos)){\n          this.cryptos[value.base_unit] = {\n            start_price: value.buy,\n            current_price: value.buy,\n            change:0,\n            ...value\n          }\n         } else { \n          this.cryptos[value.base_unit] = {...this.cryptos[value.base_unit] ,\n            change:value.buy-this.cryptos[value.base_unit].current_price,\n            ...value}\n         }\n      } \n    }  \n   \n    this.setState({time:new Date()})\n    \n  }\n\n  componentWillUnmount(){\n    this.audio.removeEventListener('ended', () => this.setState({ play: false }));  \n    this.socketConn.close();\n  }\n\n  addFav(symbol){\n    \n      this.setState({\n      favourites: {...this.state.favourites,[symbol]:\"\"}\n    },()=>{\n      localStorage.setItem('favourites',JSON.stringify(this.state.favourites))\n    }) \n    \n\n\n  }\n  \n  delFav(symbol){ \n    if(window.confirm(\"Are you sure you wanna delete ?\")){let fav = this.state.favourites;\n    delete fav[symbol];\n    this.setState({\n      favourites:fav\n    },()=>{\n      localStorage.setItem('favourites',JSON.stringify(this.state.favourites))\n    })\n  } \n\n  }\n\n  togglePlay = () => {  \n     this.audio.play() ; \n  }\n\n  render(){ \n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n        <h1 style={{\n          color:\"#023e8a\"\n        }}>Crypto<span>Mon</span> <i class=\"fas fa-bell rotating\"></i></h1>\n        <div>\n\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"Add a symbol eg: btc\"\n              aria-label=\"Add a symboll eg: btc\"\n              aria-describedby=\"basic-addon2\"\n              onChange={(ev)=>{\n                this.setState({\n                  fav_search:ev.target.value\n                })\n              }}\n            />\n            <Button variant=\"outline-secondary\" id=\"button-addon2\" className=\"btn btn-primary\"\n            onClick={()=>{this.addFav(this.state.fav_search)}}\n            >\n              Add\n            </Button>\n          </InputGroup>\n          \n        </div>\n        </div>\n        <div style={{flexGrow:1}}>\n        <div className=\"ServiceMonitorApp\">\n           {Object.entries(this.cryptos).map((item)=>{ \n          if(Object.keys(this.state.favourites).includes(item[1].base_unit)){\n            return <Card \n            key={`card+${item[1].base_unit}`}\n            onDelete={()=>{\n              this.delFav(item[1].base_unit)\n            }}\n            playAudio={this.togglePlay}\n            config={\n              {name:item[1].base_unit,...item[1]} \n            } />\n          }\n          \n        })}\n        </div>\n        </div>\n\n        <div>\n          Footer\n        </div>\n       \n      </div>\n    );\n  }\n} \n \n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}